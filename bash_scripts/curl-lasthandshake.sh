#!/bin/bash

# You have to do chmod u+x test.sh in order to have it work
# declare an array variable
declare -a arr=(
  370044000e47373333353132
  27003e000750483553353520
  350042000e47373333353132
  340048000e47373333353132
  2c0036001947373331303535
  39002e001447373333353132
  1c0035000247373430333032
  1e0048001050483553353520
  340022000e47373333353132
  43002e001747373333353132
  37004d000e50483553353520
  2c0042000e47373333353132
  2b0044000e47373333353132
  530038000e50483553353520
  2d003d001947373331303535
  3d005a000750483553353520
  1f004f001950483553353620
  3e0025000d47373333353132
  26001e000e47373333353132
  2c0045000e47373333353132
  38002a001947373333353132
  50004e001950483553353620
  29003d001047373333353132
  57004e001950483553353620
  360041000e47373333353132
  35002d000347373334363431
  320022000d47373333353132
  2a0017000f47373333353132
  2d0018001947373331303535
  340037000e50483553353520
  3b0021000e47373333353132
  38005a000750483553353520
  28002e000147373336373936
  28001d000550483553353520
)

## now loop through the above array
for i in "${arr[@]}"
do
  #  echo "$i"
   resp=$(curl -s "https://api.particle.io/v1/products/8089/devices/$i?access_token=9e3a93ac00b67ce40ac4f2bf816014f78f339a75" | jq '.last_heard')
   echo "$resp"
   # or do whatever with individual element of the array
done

# You can access them using echo "${arr[0]}", "${arr[1]}" also