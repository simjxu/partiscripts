#!/bin/bash

# You have to do chmod u+x test.sh in order to have it work
# declare an array variable
declare -a arr=(
e00fce6855a7d1c1292beba5
e00fce680a7d68a9aa6e911b
e00fce68b56d5480a9721749
e00fce68cbd3795054765f46
e00fce68bee0174d858586d9
e00fce68f1c3f1513f7e2515
e00fce68b210b52ef58730b6
e00fce688f8c1e7847bf8c1a
e00fce68aab9eac3816dad59
e00fce68a725bb14489a225b
e00fce6827cf51399a4edd07
e00fce688b57b6fd1476d2f9
e00fce68cb53c653bf27169a
e00fce68e06928584bd7b471
e00fce6860cbe0fea5ecd9e9
e00fce68ccbf05a3304deaea
e00fce683290b00cdadecafb
e00fce683e755a5502d5f11e
e00fce6844fb2e6fa5da5654
e00fce684ad8f453d2c7087d
e00fce686de14994e5bab184
e00fce681a5958a332465711
e00fce68f3f97aa2947816ad
e00fce687c0647a76bfc8f50
e00fce6846782e71da9fb9e9
e00fce68e1b371852ac79f4c
e00fce68254dc4392d2ad024
e00fce682f8715cc4310bb19
e00fce68f2b3242887852ece
e00fce68d0c96e05c5d2cf83
e00fce68083353eeb35aa91c
e00fce684769f6240aa54749
e00fce68ef2462b4abad7448
e00fce68a93b2cc483b29cca
e00fce68a8430255462a7f75
e00fce68897f937ed5ce36d6
e00fce685a0470d058db50da
e00fce68238ab4d056adf9c3
e00fce68db298c11c551482b
e00fce6841ab9682ec14ef45
e00fce68b84fec769c9b1269
e00fce68c80ec27650fb85e2
e00fce6873d0e13c05eee070
e00fce68b3b467d60b44be85
e00fce689e1a5802ab807395
e00fce6840959980cc37a882
e00fce68bff67bf31386d5e4
e00fce68094f010e83e2f006
e00fce68e62dc689eacbdc12
e00fce683fa0032edc1bafc4
e00fce68869a1d44c2eba783
e00fce68892898ad1ee9c48f
e00fce6879f08a171973579f
e00fce68b91fbc7bc02b69d8
e00fce689e887d0d58744d25
e00fce68644296fb28d3bae5
e00fce68cacd7d39c384ee46
e00fce68edec07b8557a6210
e00fce68fcf796f68a118719
e00fce687a4df75430a8c2b7
e00fce689e981cf46b3164f6
e00fce68825f7d939bebf5dc
e00fce68531182ca93bb0b1f
e00fce68474a7f2564df1b50
e00fce685997dd5c3444ee5f
e00fce68b2e6b30beaf55f9c
e00fce687142ec52d828ef43
e00fce686182dbb87b868525
e00fce689b51d0126a652d55
e00fce68c59a24029b917f7e
e00fce6855c4defa5e376056
e00fce68784f377bc6f0474f
e00fce685958b82e2e624942
e00fce68c1eb0ff05386c9fb
e00fce6833bab8b4e98f1ffe
e00fce68f198e4b532d44428
e00fce68311bce94e445f848
e00fce68754af74eaab9523b
e00fce685651991534dc7653
e00fce68771244d46f3f7caa
e00fce68c5ca959f54c3cde2
e00fce6821a981cd58c42788
e00fce68ed32b31f605d5724
e00fce681f8a29bd7cdbd78f
e00fce680c0175752a22aaaa
e00fce68c435197dc04955b6
e00fce68ce83f193c29447a5
e00fce680f4dccb785a08832
e00fce68c30a3711499ad835
e00fce6857f5e0bf2662a337
e00fce68987fb315041ad32a
e00fce684482ae4970a0c469
e00fce68c4a2647a2318c068
e00fce68e0af029bfd21deac
e00fce685fa00d988941476c
e00fce68a69c54593446a18c
e00fce68b60ef86433ed6c01
e00fce685b1559ea244ba21c
e00fce68e4960603c23e4b5f
e00fce68e903536b30032b9d
e00fce6861eea62bdbc19822
e00fce68424ff1a6e7830503
e00fce68596815e3bc18a625
e00fce68acd3286f8fa8180e
e00fce6867947ef81c14ea3b
e00fce68c8a4b26fc2400a47
e00fce683083701ae889bea8
e00fce688df2bd1682c08b17
e00fce684f63940bd4a747a7
e00fce68ac06cc31be446265
e00fce684257a76e51ad84db
e00fce688067739bb8fde038
e00fce680f6aee42802ed4fb
e00fce68f391e0268cb6f54f
e00fce68ca112afa6e6d76e7
e00fce6816c6fc89ef4328a4
e00fce685f18b6a1a81ea53b
e00fce686578cba47073e710
e00fce689d2cde1a8d1e0de9
e00fce686394ea68de946f30
e00fce684d04b74c159f4a7b
e00fce68f489be2d0ec349b6
e00fce68cb7957661bfa4af8
e00fce68c32b4bce77477412
e00fce687bbdafdcb6bd8728
e00fce68a4128e79c04c6043
e00fce68f00eb6ba86f28477
e00fce68a46d99b2d37bc8af
e00fce686f5c63456217e782
e00fce68e5c2203a93c4022b
e00fce68112a971a2a59aba8
e00fce68761ae3accfe3e54d
e00fce68c428e7b94e915087
e00fce6885a5790467f260a3
e00fce68c1ac0c78ee4f960b
e00fce68c3e9b9ee6604fda9
e00fce684094438b4e543934
e00fce68c907795d4f7f73c4
e00fce6822533b030fa46191
e00fce68f58329193da688f8
e00fce68d00502b7592f6329
e00fce688543688d1c1ccf86
e00fce68e3e8e130d22d2a95
e00fce681e97663e2abcf00d
e00fce68efc3ed6a522e0418
e00fce68d169c1d632c7e196
e00fce68cba830954b941b33
e00fce68f19410d83f922589
e00fce681365aada26f08156
e00fce6863a567c03bfb6a6c
e00fce683a441f57bcaabe48
e00fce682a79084638225574
e00fce68685086ed4ca20c92
e00fce683ab52bd282ef4f76
e00fce68dd680697db37ade9
e00fce6828cb40f074806fe0
e00fce68a7f6c4759eb4aceb
e00fce68ca3f160f4e36868a
e00fce687f0c59fea2fd5e7a
e00fce680f979e897de703fd
e00fce683f721975c43edc75
e00fce6816761e6dcdac30fa
e00fce68be31b35963df5122
e00fce687e2207624bcf9ce3
e00fce6896d3a074f888fd68
e00fce68c271785f40b756cb
e00fce68cd7f96aaebeb2201
e00fce686eba723547185348
e00fce68ec44212071c89ec8
e00fce6842695ec2b7981c2c
e00fce6851d42b5b42c0a325
e00fce683a7dae26ed9ea633
e00fce682b573b332afe0526
e00fce68c044c703864a0e53
e00fce6801e83ee10e6839c4
e00fce68c527dd537c44eceb
e00fce68f3a9fb955f2ddab7
e00fce687416aeedbe2385c4
e00fce68442fe4c2b16cc6b0
e00fce6826ae407a45810573
)

## now loop through the above array
for i in "${arr[@]}"
do
  #  echo "$i"
  #  resp=$(curl -X PUT https://api.particle.io/v1/products/10227/devices/$i -d groups[]="2020_01_90pcs&groups[]=abo&groups[]=v005&groups[]=2head" -d access_token=c2aae22606d35f8b7c0eac2911d877b9fe61d549)
   resp=$(curl -X PUT https://api.particle.io/v1/products/10227/devices/$i -d groups[]="2019_11_23_180pcs" -d access_token=f50ed1f5d34f82227bf7919f66c172953537ab18)
   echo "$resp"
   # or do whatever with individual element of the array
done

# Example if you use terminal (need additional quotes)
# curl -X PUT "https://api.particle.io/v1/products/9783/devices/e00fce68608eac603398cd5e" -d groups[]="2020_01_90pcs&groups[]=abo&groups[]=v005" -d access_token=c2aae22606d35f8b7c0eac2911d877b9fe61d549
# You can access them using echo "${arr[0]}", "${arr[1]}" also



# Example of looping:
# for ((i=1;i<5;i+=1)); do echo "${i}" ; done